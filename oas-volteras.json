{
  "openapi": "3.1.0",
  "info": { "title": "VOLTERAS CONNECT", "version": "0.1.0" },
  "servers": [{ "url": "https://api.volteras.com/" }],
  "paths": {
    "/v1/oauth2/token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Auth Token",
        "description": "Obtain OAuth 2.0 Access Token\n\nThis endpoint follows the OAuth 2.0 industry-standard protocol for authorization.\nIt performs authorization and returns the access token and refresh token.\n\nUsage:\n    - Use `client_credentials` grant type to authenticate with `client_id` and `client_secret`.\n    - Use `refresh_token` grant type to refresh an existing token.",
        "operationId": "auth_token_v1_oauth2_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_auth_token_v1_oauth2_token_post"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIAccessToken" }
              }
            }
          }
        }
      }
    },
    "/v1/oauth2/test-token": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Test Token",
        "description": "Test Access Token\n\nThis endpoint validates the access token and retrieves the associated `clientId` and `organizationId`.",
        "operationId": "test_token_v1_oauth2_test_token_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/APIAccess" }
              }
            }
          }
        },
        "security": [{ "OAuth2ClientCredentialsBearer": [] }]
      }
    },
    "/v1/accounts": {
      "get": {
        "tags": ["Accounts"],
        "summary": "List Accounts",
        "description": "List Accounts\n\nRetrieve a paginated list of accounts associated with the current organization.\n\nThis endpoint allows you to list accounts based on the following criteria:\n\n- The accounts are associated with the current organization.\n- Pagination and sorting.\n- Only active accounts are included in the list.",
        "operationId": "list_accounts_v1_accounts_get",
        "security": [{ "OAuth2ClientCredentialsBearer": [] }],
        "parameters": [
          {
            "name": "maxPageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Max page size",
              "description": "Max size of the returned list.",
              "default": 100
            },
            "description": "Max size of the returned list."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Page token",
              "description": "Page token used for pagination."
            },
            "description": "Page token used for pagination."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "contentMediaType": "application/json",
                  "contentSchema": {}
                },
                { "type": "null" }
              ],
              "title": "Filter",
              "description": "Listing filter schema."
            },
            "description": "Listing filter schema."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Page_OEMAccount_" }
              }
            }
          }
        }
      }
    },
    "/v1/accounts/{account_id}": {
      "get": {
        "tags": ["Accounts"],
        "summary": "Get Account",
        "description": "Retrieve account details by providing its unique identifier.\n\nParameters:\n    - account_id: The unique identifier (ID) of the account to retrieve.\n\nReturns:\n    - Detailed information about the retrieved account.\n\nNote:\n    - The 'account_id' parameter should be a valid and existing account identifier.",
        "operationId": "get_account_v1_accounts__account_id__get",
        "security": [{ "OAuth2ClientCredentialsBearer": [] }],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Account ID",
              "description": "ID of the account."
            },
            "description": "ID of the account."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/OEMAccount" }
              }
            }
          }
        }
      }
    },
    "/v1/accounts:connect": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Action Connect",
        "description": "Initiate Account Connection Flow\n\nGenerate a URL to initiate the account connection flow, which allows users to connect their accounts.\n\nAfter the connection flow is completed, the vehicle owner is redirected to the provided return URL with the following parameters:\n- `result` indicating success or failure.\n- `accountId` representing the ID of the connected account.",
        "operationId": "action_connect_v1_accounts_connect_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AccountConnectPayload" }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/AccountConnect" }
              }
            }
          }
        },
        "security": [{ "OAuth2ClientCredentialsBearer": [] }]
      }
    },
    "/v1/accounts/{account_id}:disconnect": {
      "post": {
        "tags": ["Accounts"],
        "summary": "Action Disconnect",
        "description": "Disconnect an Account\n\nDisconnect the specified account, terminating its connection.\n\nParameters:\n    - `account_id`: The unique identifier (ID) of the account to disconnect.\n\nReturns:\n    - Response: A 200 OK response indicating successful disconnection.\n\nThis endpoint allows you to disconnect an account by providing its unique 'account_id'.\nUpon successful disconnection, the account's connection is terminated.\n\nNote:\n    - The `account_id` should correspond to a valid and existing account.",
        "operationId": "action_disconnect_v1_accounts__account_id__disconnect_post",
        "security": [{ "OAuth2ClientCredentialsBearer": [] }],
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Account ID",
              "description": "ID of the account."
            },
            "description": "ID of the account."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/v1/vehicles": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "List Vehicles",
        "description": "List Vehicles\n\nRetrieve a paginated list of vehicles associated with your organization.\n\nReturns:\n    - A paginated response containing a list of vehicles.\n\nThis endpoint allows you to list vehicles associated with your organization based on the following criteria:\n- Vehicles must have synchronization enabled, `is_sync_enabled`.\n\nNote:\n    - Certain fields like `vin` and `registration_plate` are excluded from the response to enhance privacy and security.",
        "operationId": "list_vehicles_v1_vehicles_get",
        "security": [{ "OAuth2ClientCredentialsBearer": [] }],
        "parameters": [
          {
            "name": "maxPageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Max page size",
              "description": "Max size of the returned list.",
              "default": 100
            },
            "description": "Max size of the returned list."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Page token",
              "description": "Page token used for pagination."
            },
            "description": "Page token used for pagination."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "contentMediaType": "application/json",
                  "contentSchema": {}
                },
                { "type": "null" }
              ],
              "title": "Filter",
              "description": "Listing filter schema."
            },
            "description": "Listing filter schema."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Page_Vehicle_" }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Get Vehicle",
        "description": "Retrieve Vehicle by ID\n\nRetrieve detailed information about a vehicle by specifying its unique identifier (ID).\n\nReturns:\n    - A response containing detailed information about the vehicle.\n\nNote:\n- Certain sensitive fields like `vin` and `registration_plate` are excluded from the response to enhance privacy and security.",
        "operationId": "get_vehicle_v1_vehicles__vehicle_id__get",
        "security": [{ "OAuth2ClientCredentialsBearer": [] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/options": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Get Vehicle Options",
        "description": "Retrieves the options data for a specific Tesla vehicle based on its ID.\n\nParameters:\n- db_session: Database session to interact with the database.\n- vehicle: The vehicle object retrieved based on the provided vehicle ID.\n\nReturns:\n- schemas.VehicleOptions: A schema containing the options data for the queried Tesla vehicle.",
        "operationId": "get_vehicle_options_v1_vehicles__vehicle_id__options_get",
        "security": [
          { "OAuth2ClientCredentialsBearer": ["vehicle:information"] }
        ],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/VehicleOptions" }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/registration-plate": {
      "post": {
        "tags": ["Vehicles"],
        "summary": "Update Registration Plate",
        "description": "Update Vehicle Registration Plate\n\nUpdate the registration plate of the specified vehicle.\n\nParameters:\n    - `vehicle_id`: The unique identifier (ID) of the vehicle to update.\n\nReturns:\n    - A response containing the updated vehicle information.\n\nNote:\n    - The `vehicle_id` should correspond to a valid and existing vehicle identifier.",
        "operationId": "update_registration_plate_v1_vehicles__vehicle_id__registration_plate_post",
        "security": [
          { "OAuth2ClientCredentialsBearer": ["vehicle:information"] }
        ],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VehicleUpdateRegistration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Vehicle" }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/specifications": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Get Vehicle Specifications",
        "description": "Retrieve Vehicle Specifications\n\nObtain detailed specifications for a vehicle, with current support only for Tesla vehicles.\n\nParameters:\n    - `vehicle_id`: The unique identifier (ID) of the vehicle to retrieve specifications for.\n\nReturns:\n    - Detailed specifications of the vehicle.\n\nThis endpoint allows you to retrieve comprehensive specifications for a specific vehicle identified by its unique 'vehicle_id'.\nSpecifications are currently only supported for Tesla vehicles.\n\nNote:\n    - The `vehicle_id` should correspond to a valid and existing vehicle identifier.\n    - Specifications may be unavailable if certain conditions are not met, such as trim matching and support for the vehicle's make.",
        "operationId": "get_vehicle_specifications_v1_vehicles__vehicle_id__specifications_get",
        "security": [
          { "OAuth2ClientCredentialsBearer": ["vehicle:information"] }
        ],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleSpecifications"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/trim/suggestions": {
      "get": {
        "tags": ["Vehicles"],
        "summary": "Get Vehicle Trim Suggestions",
        "description": "Retrieve Trim Suggestions for a Vehicle\n\nObtain a list of trim suggestions for the specified vehicle.\n\nParameters:\n    - `vehicle_id`: The unique identifier (ID) of the vehicle to retrieve trim suggestions for.\n\nReturns:\n    - A list of trim suggestions for the vehicle.\n\nThis endpoint allows you to retrieve a list of trim suggestions for a specific vehicle identified by its unique `vehicle_id`.\nTrim suggestions are based on available data and are subject to the supported vehicle make.\n\nNote:\n    - The `vehicle_id` should correspond to a valid and existing vehicle identifier.\n    - Trim suggestions may be unavailable if certain conditions are not met, such as support for the vehicle's make.",
        "operationId": "get_vehicle_trim_suggestions_v1_vehicles__vehicle_id__trim_suggestions_get",
        "security": [
          { "OAuth2ClientCredentialsBearer": ["vehicle:information"] }
        ],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VehicleTrimSuggestion"
                  },
                  "title": "Response Get Vehicle Trim Suggestions V1 Vehicles  Vehicle Id  Trim Suggestions Get"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}:disconnect": {
      "post": {
        "tags": ["Vehicles"],
        "summary": "Action Disconnect",
        "description": "Disconnect Vehicle from Organization\n\nDisconnect the specified vehicle from your organization.\nThis action stops the synchronization of the vehicle's data, rendering the vehicle inaccessible.\n\nParameters:\n    - `vehicle_id`: The unique identifier (ID) of the vehicle to disconnect.\n\nReturns:\n    - A 200 OK response indicating successful disconnection.\n\nThis endpoint allows you to disconnect a specific vehicle from your organization, ceasing the synchronization of its data.\nAfter disconnection, the vehicle will no longer be accessible through your organization's account.\n\nNote:\n    - The `vehicle_id` should correspond to a valid and existing vehicle identifier.\n    - Disconnecting a vehicle is an irreversible action, and the vehicle's data will no longer be synchronized with your organization.",
        "operationId": "action_disconnect_v1_vehicles__vehicle_id__disconnect_post",
        "security": [{ "OAuth2ClientCredentialsBearer": [] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/trim": {
      "put": {
        "tags": ["Vehicles"],
        "summary": "Update Vehicle Trim",
        "description": "Set Vehicle Trim\n\nSet the trim for the specified vehicle.\n\nParameters:\n    - `vehicle_id`: The unique identifier (ID) of the vehicle to update the trim for.\n\nReturns:\n    - A 202 Accepted response indicating successful trim update.\n\nThis endpoint allows you to set the trim for a specific vehicle identified by its unique `vehicle_id`.\n\nNote:\n    - The `vehicle_id` should correspond to a valid and existing vehicle identifier.\n    - Trim information must be valid and exist in the system.",
        "operationId": "update_vehicle_trim_v1_vehicles__vehicle_id__trim_put",
        "security": [
          { "OAuth2ClientCredentialsBearer": ["vehicle:information"] }
        ],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateVehicleTrim" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": { "application/json": { "schema": {} } }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/telemetry": {
      "get": {
        "tags": ["Vehicle Telemetry"],
        "summary": "Get Vehicle Telemetry",
        "description": "Retrieve Vehicle Telemetry\n\nRetrieve telemetry data for the specified vehicle. The telemetry data provides essential information about the vehicle's status and performance.\n\nParameters:\n    - `vehicle_id`: The unique identifier (ID) of the vehicle to retrieve telemetry data for.\n\nReturns:\n    - Telemetry data for the vehicle.\n\nTelemetry Information returned might include:\n- Odometer: The total distance traveled by the vehicle, recorded in kilometers. The timestamp indicates when the odometer reading was taken.\n- Location: The current latitude and longitude coordinates of the vehicle's position on Earth's surface. The timestamp indicates when the location reading was captured.\n- Elevation: The vehicle's altitude above sea level, measured in meters. The timestamp shows when the elevation reading was recorded.\n- State of Charge: The battery's state of charge, expressed as a percentage. The timestamp indicates when the charge level was last updated.\n- Charging State: Indicates whether the vehicle is actively charging or not. The timestamp reveals the time of the charging state observation.\n- Range: The estimated driving range of the vehicle on its current battery charge, provided in kilometers. The timestamp shows when the range reading was taken.\n\nNote:\n- The `vehicle_id` should correspond to a valid and existing vehicle identifier.",
        "operationId": "get_vehicle_telemetry_v1_vehicles__vehicle_id__telemetry_get",
        "security": [
          { "OAuth2ClientCredentialsBearer": ["vehicle:telemetry"] }
        ],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/VehicleTelemetry" }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-executions": {
      "get": {
        "tags": ["Vehicle Command Executions"],
        "summary": "List Vehicle Command Executions",
        "description": "List the vehicle's command executions.",
        "operationId": "list_vehicle_command_executions_v1_vehicles__vehicle_id__command_executions_get",
        "security": [
          { "OAuth2ClientCredentialsBearer": [] },
          { "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }
        ],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Max page size",
              "description": "Max size of the returned list.",
              "default": 100
            },
            "description": "Max size of the returned list."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Page token",
              "description": "Page token used for pagination."
            },
            "description": "Page token used for pagination."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "contentMediaType": "application/json",
                  "contentSchema": {}
                },
                { "type": "null" }
              ],
              "title": "Filter",
              "description": "Listing filter schema."
            },
            "description": "Listing filter schema."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_VehicleCommandExecution_"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-executions/{vehicle_command_execution_id}": {
      "get": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Get Vehicle Command Execution",
        "description": "Get a vehicle command execution by ID.",
        "operationId": "get_vehicle_command_execution_v1_vehicles__vehicle_id__command_executions__vehicle_command_execution_id__get",
        "security": [
          { "OAuth2ClientCredentialsBearer": [] },
          { "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }
        ],
        "parameters": [
          {
            "name": "vehicle_command_execution_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle command execution ID",
              "description": "ID of the vehicle command execution."
            },
            "description": "ID of the vehicle command execution."
          },
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:actuate-front-trunk": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Actuate Front Trunk",
        "description": "Create a `ACTUATE_FRONT_TRUNK` command execution.",
        "operationId": "action_actuate_front_trunk_v1_vehicles__vehicle_id__command_execution_actuate_front_trunk_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:actuate-rear-trunk": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Actuate Rear Trunk",
        "description": "Create a `ACTUATE_REAR_TRUNK` command execution.",
        "operationId": "action_actuate_rear_trunk_v1_vehicles__vehicle_id__command_execution_actuate_rear_trunk_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:climate-off": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Climate Off",
        "description": "Create a `CLIMATE_OFF` command execution.",
        "operationId": "action_climate_off_v1_vehicles__vehicle_id__command_execution_climate_off_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:climate-on": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Climate On",
        "description": "Create a `CLIMATE_ON` command execution.",
        "operationId": "action_climate_on_v1_vehicles__vehicle_id__command_execution_climate_on_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:close-charge-port": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Close Charge Port",
        "description": "Create a `CLOSE_CHARGE_PORT` command execution.",
        "operationId": "action_close_charge_port_v1_vehicles__vehicle_id__command_execution_close_charge_port_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:lock-doors": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Lock Doors",
        "description": "Create a `LOCK_DOORS` command execution.",
        "operationId": "action_lock_doors_v1_vehicles__vehicle_id__command_execution_lock_doors_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:open-charge-port": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Open Charge Port",
        "description": "Create a `OPEN_CHARGE_PORT` command execution.",
        "operationId": "action_open_charge_port_v1_vehicles__vehicle_id__command_execution_open_charge_port_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:set-charge-limit": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Set Charge Limit",
        "description": "Create a `SET_CHARGE_LIMIT` command execution.",
        "operationId": "action_set_charge_limit_v1_vehicles__vehicle_id__command_execution_set_charge_limit_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SetChargeLimitPayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:set-temperature": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Set Temperature",
        "description": "Create a `SET_TEMPERATURE` command execution.",
        "operationId": "action_set_temperature_v1_vehicles__vehicle_id__command_execution_set_temperature_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SetTemperaturePayload" }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:start-charging": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Start Charging",
        "description": "Create a `START_CHARGING` command execution.",
        "operationId": "action_start_charging_v1_vehicles__vehicle_id__command_execution_start_charging_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:start-hvac-system": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Start Hvac System",
        "description": "Create a `START_HVAC_SYSTEM` command execution.",
        "operationId": "action_start_hvac_system_v1_vehicles__vehicle_id__command_execution_start_hvac_system_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:stop-charging": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Stop Charging",
        "description": "Create a `STOP_CHARGING` command execution.",
        "operationId": "action_stop_charging_v1_vehicles__vehicle_id__command_execution_stop_charging_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/command-execution:unlock-doors": {
      "post": {
        "tags": ["Vehicle Command Executions"],
        "summary": "Action Unlock Doors",
        "description": "Create a `UNLOCK_DOORS` command execution.",
        "operationId": "action_unlock_doors_v1_vehicles__vehicle_id__command_execution_unlock_doors_post",
        "security": [{ "OAuth2ClientCredentialsBearer": ["vehicle:commands"] }],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleCommandExecution"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/charging-history": {
      "get": {
        "tags": ["Vehicle Charging History"],
        "summary": "List Vehicle Charging History",
        "description": "List Vehicle Charging History\n\nRetrieve a list of charging history sessions for the provided vehicle.\n\nParameters:\n    - `vehicle_id`: The unique identifier (ID) of the vehicle to retrieve charging history for.\n\nReturns:\n    - A paginated list of vehicle charging history sessions.\n\nThis endpoint allows you to retrieve a paginated list of charging history sessions for a specific vehicle identified by its unique `vehicle_id`.\nThe list is ordered by the starting time of each charging session, with the most recent sessions appearing first.\n\nNote:\n    - The `vehicle_id` should correspond to a valid and existing vehicle identifier.",
        "operationId": "list_vehicle_charging_history_v1_vehicles__vehicle_id__charging_history_get",
        "security": [
          { "OAuth2ClientCredentialsBearer": [] },
          { "OAuth2ClientCredentialsBearer": ["vehicle:charging_history"] }
        ],
        "parameters": [
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          },
          {
            "name": "maxPageSize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Max page size",
              "description": "Max size of the returned list.",
              "default": 100
            },
            "description": "Max size of the returned list."
          },
          {
            "name": "pageToken",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [{ "type": "string" }, { "type": "null" }],
              "title": "Page token",
              "description": "Page token used for pagination."
            },
            "description": "Page token used for pagination."
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "contentMediaType": "application/json",
                  "contentSchema": {}
                },
                { "type": "null" }
              ],
              "title": "Filter",
              "description": "Listing filter schema."
            },
            "description": "Listing filter schema."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Page_VehicleChargingSession_"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vehicles/{vehicle_id}/charging-history/{vehicle_charging_session_id}": {
      "get": {
        "tags": ["Vehicle Charging History"],
        "summary": "Get Vehicle Charging History",
        "description": "Retrieve Vehicle Charging Session\n\nRetrieve details of a vehicle charging session based on its unique ID.\n\nParameters:\n    - `vehicle_id`: The unique identifier (ID) of the vehicle associated with the charging session.\n    - `vehicle_charging_session_id`: The unique identifier (ID) of the vehicle charging session to retrieve.\n\nReturns:\n    - Details of the vehicle charging session.\n\nThis endpoint allows you to retrieve details of a specific vehicle charging session based on its unique `vehicle_charging_session_id`.\nThe session details provide information about the charging start time, end time, energy consumption, and more.\n\nNote:\n    - The `vehicle_id` should correspond to a valid and existing vehicle identifier.\n    - The `vehicle_charging_session_id` uniquely identifies an existing charging session.",
        "operationId": "get_vehicle_charging_history_v1_vehicles__vehicle_id__charging_history__vehicle_charging_session_id__get",
        "security": [
          { "OAuth2ClientCredentialsBearer": [] },
          { "OAuth2ClientCredentialsBearer": ["vehicle:charging_history"] }
        ],
        "parameters": [
          {
            "name": "vehicle_charging_session_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle charging history ID",
              "description": "ID of the vehicle charging history."
            },
            "description": "ID of the vehicle charging history."
          },
          {
            "name": "vehicle_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Vehicle ID",
              "description": "Unique internal identifier for the vehicle."
            },
            "description": "Unique internal identifier for the vehicle."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VehicleChargingSession"
                }
              }
            }
          }
        }
      }
    },
    "/v1/bess/single/{bess_id}/telemetry": {
      "get": {
        "tags": ["BESS Telemetry"],
        "summary": "Bess Single Telemetry",
        "description": "BESS Single Telemetry Endpoint\n\nNote: The BESS-related endpoints are currently in **beta** and are expected to be fully rolled out soon\n\nThis endpoint provides detailed telemetry information for a specific BESS unit\nbased on the specified parameters.\n\n**Parameters**:\n- `bess_id`: Volteras' unique identifier for the BESS unit\n\n**Returns**:\n- `BessSingle`: A response object containing the telemetry data with identifiers, energy metrics,\nstate of charge, and other metadata.",
        "operationId": "bess_single_telemetry_v1_bess_single__bess_id__telemetry_get",
        "parameters": [
          {
            "name": "bess_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "BESS Unit ID",
              "description": "Volteras' identifier for the battery in question."
            },
            "description": "Volteras' identifier for the battery in question."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BessSingle" }
              }
            }
          }
        }
      }
    },
    "/v1/bess/aggregate/{system_id}/telemetry": {
      "get": {
        "tags": ["BESS Telemetry"],
        "summary": "Bess Aggregate Telemetry",
        "description": "BESS Aggregate Telemetry Endpoint\n\nNote: The BESS-related endpoints are currently in **beta** and are expected to be fully rolled out soon\n\nRetrieve telemetry data for a specific BESS (Battery Energy Storage System) system.\n\nThis endpoint provides detailed telemetry data for a BESS system. This encompasses\nthe system's energy metrics, energy flow metrics, and relevant metadata. The telemetry\ndata presented is an aggregate representation, often used for comprehensive monitoring\nand analytics purposes.\n\n**Parameters**:\n- `system_id`: The unique identifier assigned by Volteras for the BESS system in question.\n             This identifier helps in uniquely fetching data for a specific set of batteries.\n\n**Returns**:\n- `BessAggregate`: A response object representing the aggregated telemetry data for the BESS system. This\n                 includes details like energy metrics (charged, discharged, state of charge),\n                 energy flow metrics (how energy moves within different parts of the system,\n                 e.g., solar, generator, grid, battery, consumer) and pertinent metadata.",
        "operationId": "bess_aggregate_telemetry_v1_bess_aggregate__system_id__telemetry_get",
        "parameters": [
          {
            "name": "system_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "BESS System ID",
              "description": "Volteras' identifier for the system containing the batteries in question."
            },
            "description": "Volteras' identifier for the system containing the batteries in question."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/BessAggregate" }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "APIAccess": {
        "properties": {
          "clientId": {
            "type": "string",
            "title": "Client ID",
            "description": "Your client ID."
          },
          "organizationId": {
            "type": "string",
            "title": "Organization ID",
            "description": "ID of your organization."
          }
        },
        "type": "object",
        "required": ["clientId", "organizationId"],
        "title": "APIAccess",
        "description": "Schema of APIAccess. Contains info about the authenticated APIAccess."
      },
      "APIAccessToken": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access token",
            "description": "The access token used for authenticated requests."
          },
          "token_type": {
            "type": "string",
            "title": "Token type",
            "description": "Type of the token."
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires in",
            "description": "Integer with the seconds that the access token will be expired in."
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh token",
            "description": "The token used to refresh the authentication and retrieve a new access token."
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type",
          "expires_in",
          "refresh_token"
        ],
        "title": "APIAccessToken",
        "description": "Schema of the APIAccessToken, returned by the authentication or refresh token"
      },
      "AccountConnect": {
        "properties": {
          "authenticationUrl": {
            "type": "string",
            "title": "Authenticationurl",
            "description": "The URL to redirect the user to for authentication through the connect flow."
          }
        },
        "type": "object",
        "required": ["authenticationUrl"],
        "title": "AccountConnect"
      },
      "AccountConnectPayload": {
        "properties": {
          "returnUrl": {
            "type": "string",
            "title": "Redirect URI",
            "description": "The url the user is redirected to at the end of the consent flow"
          },
          "makes": {
            "anyOf": [
              {
                "items": { "$ref": "#/components/schemas/MakeEnum" },
                "type": "array"
              },
              { "type": "null" }
            ],
            "title": "Makes",
            "description": "Only show these makes of device in the consent flow"
          },
          "deviceTypes": {
            "items": { "$ref": "#/components/schemas/DeviceTypeEnum" },
            "type": "array",
            "minItems": 1,
            "title": "Device types",
            "description": "Only show these device types in the consent flow. If only one device select, will skip the device selection page."
          },
          "scopes": {
            "items": { "$ref": "#/components/schemas/ScopeEnum" },
            "type": "array",
            "minItems": 1,
            "title": "Scopes",
            "description": "List of scopes that the application requires access to"
          }
        },
        "type": "object",
        "required": ["returnUrl", "deviceTypes", "scopes"],
        "title": "AccountConnectPayload"
      },
      "AggregateEnergyMetrics": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "End of time interval timestamp."
          },
          "chargedEnergy": {
            "allOf": [{ "$ref": "#/components/schemas/EnergyMetricDetail" }],
            "description": "Metrics related to energy charged into the system of BESS units."
          },
          "dischargedEnergy": {
            "allOf": [{ "$ref": "#/components/schemas/EnergyMetricDetail" }],
            "description": "Metrics related to energy discharged from the system of BESS units."
          },
          "stateOfCharge": {
            "allOf": [{ "$ref": "#/components/schemas/EnergyMetricDetail" }],
            "description": "Metrics related to the state of charge for the system of BESS units."
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "chargedEnergy",
          "dischargedEnergy",
          "stateOfCharge"
        ],
        "title": "AggregateEnergyMetrics"
      },
      "BatteryEnergy": {
        "properties": {
          "energyExported": {
            "type": "integer",
            "title": "Energyexported",
            "description": "Total energy exported from the battery."
          },
          "energyImportedFromSolar": {
            "type": "integer",
            "title": "Energyimportedfromsolar",
            "description": "Total energy from solar imported to the battery."
          },
          "energyImportedFromGrid": {
            "type": "integer",
            "title": "Energyimportedfromgrid",
            "description": "Total energy from the grid imported to the battery."
          },
          "energyImportedFromGenerator": {
            "type": "integer",
            "title": "Energyimportedfromgenerator",
            "description": "Total energy from the generator imported to the battery."
          }
        },
        "type": "object",
        "required": [
          "energyExported",
          "energyImportedFromSolar",
          "energyImportedFromGrid",
          "energyImportedFromGenerator"
        ],
        "title": "BatteryEnergy"
      },
      "BessAggregate": {
        "properties": {
          "identifier": { "$ref": "#/components/schemas/Identifier" },
          "manufacturer": {
            "type": "string",
            "title": "Manufacturer",
            "description": "Manufacturer name of the BESS unit."
          },
          "timeResolution": {
            "allOf": [{ "$ref": "#/components/schemas/TimeResolutionEnum" }],
            "description": "Temporal granularity of the data."
          },
          "totalUnits": {
            "type": "integer",
            "title": "Totalunits",
            "description": "Total number of BESS units in the system."
          },
          "timeInterval": { "$ref": "#/components/schemas/TimeInterval" },
          "energyMetrics": {
            "items": { "$ref": "#/components/schemas/AggregateEnergyMetrics" },
            "type": "array",
            "title": "Energymetrics"
          },
          "energyFlowMetrics": {
            "$ref": "#/components/schemas/EnergyFlowMetrics"
          },
          "metadata": { "$ref": "#/components/schemas/Metadata" }
        },
        "type": "object",
        "required": [
          "identifier",
          "manufacturer",
          "timeResolution",
          "totalUnits",
          "timeInterval",
          "energyMetrics",
          "energyFlowMetrics",
          "metadata"
        ],
        "title": "BessAggregate"
      },
      "BessSingle": {
        "properties": {
          "identifier": { "$ref": "#/components/schemas/Identifier" },
          "manufacturer": {
            "type": "string",
            "title": "Manufacturer",
            "description": "Manufacturer name of the BESS unit."
          },
          "timeResolution": {
            "allOf": [{ "$ref": "#/components/schemas/TimeResolutionEnum" }],
            "description": "Temporal granularity of the data."
          },
          "timeInterval": { "$ref": "#/components/schemas/TimeInterval" },
          "energyMetrics": {
            "items": { "$ref": "#/components/schemas/EnergyMetrics" },
            "type": "array",
            "title": "Energymetrics"
          },
          "stateOfCharge": { "$ref": "#/components/schemas/StateOfCharge" },
          "metadata": { "$ref": "#/components/schemas/Metadata" }
        },
        "type": "object",
        "required": [
          "identifier",
          "manufacturer",
          "timeResolution",
          "timeInterval",
          "energyMetrics",
          "stateOfCharge",
          "metadata"
        ],
        "title": "BessSingle"
      },
      "Body_auth_token_v1_oauth2_token_post": {
        "properties": {
          "client_id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Id",
            "description": "Your client ID."
          },
          "client_secret": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Client Secret",
            "description": "Your client secret."
          },
          "refresh_token": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Refresh Token",
            "description": "The refresh token acquired during authentication with the `client_credentials` `grant_type`."
          },
          "grant_type": {
            "type": "string",
            "title": "Grant Type",
            "description": "OAuth 2.0 grant type."
          }
        },
        "type": "object",
        "title": "Body_auth_token_v1_oauth2_token_post"
      },
      "ConsumerEnergy": {
        "properties": {
          "energyImportedFromSolar": {
            "type": "integer",
            "title": "Energyimportedfromsolar",
            "description": "Total energy from solar imported to the consumer."
          },
          "energyImportedFromGrid": {
            "type": "integer",
            "title": "Energyimportedfromgrid",
            "description": "Total energy from the grid imported to the consumer."
          },
          "energyImportedFromBattery": {
            "type": "integer",
            "title": "Energyimportedfrombattery",
            "description": "Total energy from the battery imported to the consumer."
          },
          "energyImportedFromGenerator": {
            "type": "integer",
            "title": "Energyimportedfromgenerator",
            "description": "Total energy from the generator imported to the consumer."
          }
        },
        "type": "object",
        "required": [
          "energyImportedFromSolar",
          "energyImportedFromGrid",
          "energyImportedFromBattery",
          "energyImportedFromGenerator"
        ],
        "title": "ConsumerEnergy"
      },
      "DeviceTypeEnum": {
        "type": "string",
        "enum": ["vehicle", "battery", "charger", "inverter", "heat_pump"],
        "title": "DeviceTypeEnum"
      },
      "EnergyFlowMetrics": {
        "properties": {
          "solar": {
            "allOf": [{ "$ref": "#/components/schemas/SolarEnergy" }],
            "description": "Metrics related to solar energy."
          },
          "generator": {
            "allOf": [{ "$ref": "#/components/schemas/GeneratorEnergy" }],
            "description": "Metrics related to generator energy."
          },
          "grid": {
            "allOf": [{ "$ref": "#/components/schemas/GridEnergy" }],
            "description": "Metrics related to grid energy."
          },
          "battery": {
            "allOf": [{ "$ref": "#/components/schemas/BatteryEnergy" }],
            "description": "Metrics related to BESS energy."
          },
          "consumer": {
            "allOf": [{ "$ref": "#/components/schemas/ConsumerEnergy" }],
            "description": "Metrics related to consumer energy."
          }
        },
        "type": "object",
        "required": ["solar", "generator", "grid", "battery", "consumer"],
        "title": "EnergyFlowMetrics"
      },
      "EnergyMetricDetail": {
        "properties": {
          "value": {
            "type": "integer",
            "title": "Value",
            "description": "Time series of the metric."
          },
          "unitsReporting": {
            "type": "integer",
            "title": "Unitsreporting",
            "description": "Number of units reporting the metric."
          }
        },
        "type": "object",
        "required": ["value", "unitsReporting"],
        "title": "EnergyMetricDetail"
      },
      "EnergyMetrics": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "End of time interval timestamp."
          },
          "chargedEnergy": {
            "type": "integer",
            "title": "Chargedenergy",
            "description": "Time series of energy charged into the BESS."
          },
          "dischargedEnergy": {
            "type": "integer",
            "title": "Dischargedenergy",
            "description": "Time series of energy discharged from the BESS."
          }
        },
        "type": "object",
        "required": ["timestamp", "chargedEnergy", "dischargedEnergy"],
        "title": "EnergyMetrics"
      },
      "GeneratorEnergy": {
        "properties": {
          "energyExported": {
            "type": "integer",
            "title": "Energyexported",
            "description": "Total energy exported from the generator."
          }
        },
        "type": "object",
        "required": ["energyExported"],
        "title": "GeneratorEnergy"
      },
      "GridEnergy": {
        "properties": {
          "energyImported": {
            "type": "integer",
            "title": "Energyimported",
            "description": "Total energy imported from the grid."
          },
          "energyExportedFromSolar": {
            "type": "integer",
            "title": "Energyexportedfromsolar",
            "description": "Total energy exported to the grid from solar."
          },
          "energyExportedFromGenerator": {
            "type": "integer",
            "title": "Energyexportedfromgenerator",
            "description": "Total energy exported to the grid from the generator."
          },
          "energyExportedFromBattery": {
            "type": "integer",
            "title": "Energyexportedfrombattery",
            "description": "Total energy exported to the grid from the battery."
          },
          "servicesEnergyImported": {
            "type": "integer",
            "title": "Servicesenergyimported",
            "description": "Total grid services energy imported from the grid."
          },
          "servicesEnergyExported": {
            "type": "integer",
            "title": "Servicesenergyexported",
            "description": "Total grid services energy exported to the grid."
          }
        },
        "type": "object",
        "required": [
          "energyImported",
          "energyExportedFromSolar",
          "energyExportedFromGenerator",
          "energyExportedFromBattery",
          "servicesEnergyImported",
          "servicesEnergyExported"
        ],
        "title": "GridEnergy"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": { "$ref": "#/components/schemas/ValidationError" },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Identifier": {
        "properties": {
          "volterasId": {
            "type": "string",
            "title": "Volterasid",
            "description": "Volteras' unique identifier for the BESS unit."
          },
          "manufacturerId": {
            "type": "string",
            "title": "Manufacturerid",
            "description": "Manufacturer's unique identifier for the BESS unit."
          }
        },
        "type": "object",
        "required": ["volterasId", "manufacturerId"],
        "title": "Identifier"
      },
      "MakeEnum": {
        "type": "string",
        "enum": [
          "BMW",
          "MINI",
          "HYUNDAI",
          "KIA",
          "TESLA",
          "AUDI",
          "SEAT",
          "SKODA",
          "VOLKSWAGEN",
          "CUPRA",
          "VOLVO",
          "ENPHASE"
        ],
        "title": "MakeEnum",
        "description": "Implemented makes enum"
      },
      "Metadata": {
        "properties": {
          "energyUnit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Energyunit",
            "description": "Default unit for all energy-related fields.",
            "default": "Wh"
          },
          "timestampFormat": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Timestampformat",
            "description": "Default format for all date-time fields, timezone defaults to UTC. YYYY-MM-DDThh:mm:ssTZD",
            "default": "ISO 8601"
          }
        },
        "type": "object",
        "required": ["energyUnit", "timestampFormat"],
        "title": "Metadata"
      },
      "OEMAccount": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "username": { "type": "string", "title": "Username" }
        },
        "type": "object",
        "required": ["id", "username"],
        "title": "OEMAccount"
      },
      "Option": {
        "properties": {
          "code": { "type": "string", "title": "Code" },
          "description": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Description"
          }
        },
        "type": "object",
        "required": ["code", "description"],
        "title": "Option"
      },
      "Page_OEMAccount_": {
        "properties": {
          "results": {
            "items": { "$ref": "#/components/schemas/OEMAccount" },
            "type": "array",
            "title": "Results",
            "description": "Returned data from the listing query."
          },
          "nextPageToken": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Next page token",
            "description": "Next page token used for pagination."
          },
          "totalResults": {
            "type": "integer",
            "title": "Total results",
            "description": "Total result count."
          }
        },
        "type": "object",
        "required": ["results", "nextPageToken", "totalResults"],
        "title": "Page[OEMAccount]"
      },
      "Page_VehicleChargingSession_": {
        "properties": {
          "results": {
            "items": { "$ref": "#/components/schemas/VehicleChargingSession" },
            "type": "array",
            "title": "Results",
            "description": "Returned data from the listing query."
          },
          "nextPageToken": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Next page token",
            "description": "Next page token used for pagination."
          },
          "totalResults": {
            "type": "integer",
            "title": "Total results",
            "description": "Total result count."
          }
        },
        "type": "object",
        "required": ["results", "nextPageToken", "totalResults"],
        "title": "Page[VehicleChargingSession]"
      },
      "Page_VehicleCommandExecution_": {
        "properties": {
          "results": {
            "items": { "$ref": "#/components/schemas/VehicleCommandExecution" },
            "type": "array",
            "title": "Results",
            "description": "Returned data from the listing query."
          },
          "nextPageToken": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Next page token",
            "description": "Next page token used for pagination."
          },
          "totalResults": {
            "type": "integer",
            "title": "Total results",
            "description": "Total result count."
          }
        },
        "type": "object",
        "required": ["results", "nextPageToken", "totalResults"],
        "title": "Page[VehicleCommandExecution]"
      },
      "Page_Vehicle_": {
        "properties": {
          "results": {
            "items": { "$ref": "#/components/schemas/Vehicle" },
            "type": "array",
            "title": "Results",
            "description": "Returned data from the listing query."
          },
          "nextPageToken": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Next page token",
            "description": "Next page token used for pagination."
          },
          "totalResults": {
            "type": "integer",
            "title": "Total results",
            "description": "Total result count."
          }
        },
        "type": "object",
        "required": ["results", "nextPageToken", "totalResults"],
        "title": "Page[Vehicle]"
      },
      "ScopeEnum": {
        "type": "string",
        "enum": [
          "vehicle:all",
          "vehicle:charging_history",
          "vehicle:telemetry",
          "vehicle:information",
          "vehicle:commands"
        ],
        "title": "ScopeEnum"
      },
      "SetChargeLimitPayload": {
        "properties": { "limit": { "type": "integer", "title": "Limit" } },
        "type": "object",
        "required": ["limit"],
        "title": "SetChargeLimitPayload"
      },
      "SetTemperaturePayload": {
        "properties": {
          "driverTemperature": {
            "type": "number",
            "title": "Drivertemperature"
          },
          "passengerTemperature": {
            "type": "number",
            "title": "Passengertemperature"
          }
        },
        "type": "object",
        "required": ["driverTemperature", "passengerTemperature"],
        "title": "SetTemperaturePayload"
      },
      "SolarEnergy": {
        "properties": {
          "energyExported": {
            "type": "integer",
            "title": "Energyexported",
            "description": "Total energy exported from solar."
          }
        },
        "type": "object",
        "required": ["energyExported"],
        "title": "SolarEnergy"
      },
      "StateOfCharge": {
        "properties": {
          "value": {
            "type": "integer",
            "maximum": 100,
            "minimum": 0,
            "title": "Value",
            "description": "Percentage of current state of charge."
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp",
            "description": "Time of the latest state of charge read."
          }
        },
        "type": "object",
        "required": ["value", "timestamp"],
        "title": "StateOfCharge"
      },
      "TimeInterval": {
        "properties": {
          "startTimestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Starttimestamp",
            "description": "Start time of the time series."
          },
          "endTimestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Endtimestamp",
            "description": "End time of the time series."
          }
        },
        "type": "object",
        "required": ["startTimestamp", "endTimestamp"],
        "title": "TimeInterval"
      },
      "TimeResolutionEnum": {
        "type": "string",
        "enum": [
          "5 Minutes",
          "15 Minutes",
          "1 Day",
          "7 Days",
          "1 Month",
          "Lifetime"
        ],
        "title": "TimeResolutionEnum"
      },
      "UpdateVehicleTrim": {
        "properties": { "id": { "type": "string", "title": "Id" } },
        "type": "object",
        "required": ["id"],
        "title": "UpdateVehicleTrim",
        "description": "Update trim for a vehicle"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": { "anyOf": [{ "type": "string" }, { "type": "integer" }] },
            "type": "array",
            "title": "Location"
          },
          "msg": { "type": "string", "title": "Message" },
          "type": { "type": "string", "title": "Error Type" }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "Vehicle": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique internal identifier for the vehicle."
          },
          "make": {
            "type": "string",
            "title": "Make",
            "description": "Manufacturer of the vehicle."
          },
          "model": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Model",
            "description": "Subcategory of the make, used to differentiate between different variations of a vehicle within the same make."
          },
          "trim": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Trim",
            "description": "Subcategory of the model, used to differentiate between different variations of a vehicle within the same model. Also referred to as version or generation."
          },
          "modelYear": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Modelyear",
            "description": "Year the vehicle model was released. Could be different than the year the vehicle was manufactured."
          },
          "vin": {
            "type": "string",
            "title": "Vin",
            "description": "Vehicle identification number. Unique identifier for the vehicle."
          },
          "registrationPlate": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Registrationplate",
            "description": "Plate that is attached to a vehicle and displays a unique combination of letters and numbers assigned to the vehicle by a government agency. Also referred to as license plate or registration number."
          },
          "metadata": {
            "allOf": [{ "$ref": "#/components/schemas/VehicleMetaData" }],
            "description": "Additional information about the vehicle."
          }
        },
        "type": "object",
        "required": [
          "id",
          "make",
          "model",
          "trim",
          "modelYear",
          "vin",
          "registrationPlate",
          "metadata"
        ],
        "title": "Vehicle"
      },
      "VehicleChargeStateEnum": {
        "type": "string",
        "enum": [
          "STARTING",
          "STOPPED",
          "CHARGING",
          "COMPLETE",
          "DISCONNECTED",
          "NO_POWER",
          "CONNECTED"
        ],
        "title": "VehicleChargeStateEnum",
        "description": "Enum for charging status."
      },
      "VehicleChargingSession": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "vehicleId": { "type": "string", "title": "Vehicleid" },
          "startedAt": {
            "type": "string",
            "format": "date-time",
            "title": "Startedat"
          },
          "endedAt": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Endedat"
          },
          "chargeDuration": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Chargeduration"
          },
          "latitude": { "type": "number", "title": "Latitude" },
          "longitude": { "type": "number", "title": "Longitude" },
          "kwhFromGrid": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Kwhfromgrid"
          },
          "kwhInHvb": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Kwhinhvb"
          },
          "startStateOfCharge": {
            "type": "number",
            "title": "Startstateofcharge"
          },
          "endStateOfCharge": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Endstateofcharge"
          },
          "externalTemperature": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Externaltemperature"
          },
          "kwMedian": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Kwmedian"
          }
        },
        "type": "object",
        "required": [
          "id",
          "vehicleId",
          "startedAt",
          "endedAt",
          "chargeDuration",
          "latitude",
          "longitude",
          "kwhFromGrid",
          "kwhInHvb",
          "startStateOfCharge",
          "endStateOfCharge",
          "externalTemperature",
          "kwMedian"
        ],
        "title": "VehicleChargingSession"
      },
      "VehicleChargingState": {
        "properties": {
          "chargingState": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleChargeStateEnum" },
              { "type": "null" }
            ],
            "description": "Charging state reading."
          },
          "timestamp": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Timestamp",
            "description": "Timestamp in ISO 8601 format: YYYY-MM-DDThh:mm:ssTZD."
          }
        },
        "type": "object",
        "required": ["chargingState", "timestamp"],
        "title": "VehicleChargingState"
      },
      "VehicleCommandEnum": {
        "type": "string",
        "enum": [
          "WAKE_UP",
          "UNLOCK_DOORS",
          "LOCK_DOORS",
          "HONK_HORN",
          "FLASH_LIGHTS",
          "START_HVAC_SYSTEM",
          "CLIMATE_ON",
          "CLIMATE_OFF",
          "SET_TEMPERATURE",
          "SET_CHARGE_LIMIT",
          "ACTUATE_FRONT_TRUNK",
          "ACTUATE_REAR_TRUNK",
          "OPEN_CHARGE_PORT",
          "CLOSE_CHARGE_PORT",
          "START_CHARGING",
          "STOP_CHARGING",
          "SET_VEHICLE_NAME",
          "SCHEDULE_SOFTWARE_UPDATE",
          "CANCEL_SOFTWARE_UPDATE",
          "WINDOW_HEATING_ON",
          "WINDOW_HEATING_OFF"
        ],
        "title": "VehicleCommandEnum",
        "description": "Enum for available commands."
      },
      "VehicleCommandExecution": {
        "properties": {
          "id": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Id"
          },
          "vehicleId": { "type": "string", "title": "Vehicleid" },
          "command": { "$ref": "#/components/schemas/VehicleCommandEnum" },
          "commandArguments": {
            "anyOf": [{ "type": "object" }, { "type": "null" }],
            "title": "Commandarguments"
          },
          "timeout": {
            "anyOf": [{ "type": "integer" }, { "type": "null" }],
            "title": "Timeout"
          },
          "executedAt": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Executedat"
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/VehicleCommandExecutionStatusEnum"
              },
              { "type": "null" }
            ]
          },
          "failedReason": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Failedreason"
          }
        },
        "type": "object",
        "required": [
          "id",
          "vehicleId",
          "command",
          "commandArguments",
          "timeout",
          "executedAt",
          "status",
          "failedReason"
        ],
        "title": "VehicleCommandExecution"
      },
      "VehicleCommandExecutionStatusEnum": {
        "type": "string",
        "enum": ["PENDING", "EXECUTED", "FAILED"],
        "title": "VehicleCommandExecutionStatusEnum",
        "description": "Enum for command execution status."
      },
      "VehicleConfig": {
        "properties": {
          "exteriorColor": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Exteriorcolor"
          },
          "chargePortType": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Chargeporttype"
          },
          "driverAssist": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Driverassist"
          },
          "efficiencyPackage": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Efficiencypackage"
          },
          "hasAirSuspension": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hasairsuspension"
          },
          "hasLudicrousMode": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hasludicrousmode"
          },
          "hasSeatCooling": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Hasseatcooling"
          },
          "headlampType": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Headlamptype"
          },
          "interiorTrimType": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Interiortrimtype"
          },
          "motorizedChargePort": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Motorizedchargeport"
          },
          "rearDriveUnit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Reardriveunit"
          },
          "rhd": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Rhd"
          },
          "spoilerType": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Spoilertype"
          },
          "wheelType": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Wheeltype"
          }
        },
        "type": "object",
        "required": [
          "exteriorColor",
          "chargePortType",
          "driverAssist",
          "efficiencyPackage",
          "hasAirSuspension",
          "hasLudicrousMode",
          "hasSeatCooling",
          "headlampType",
          "interiorTrimType",
          "motorizedChargePort",
          "rearDriveUnit",
          "rhd",
          "spoilerType",
          "wheelType"
        ],
        "title": "VehicleConfig"
      },
      "VehicleElevation": {
        "properties": {
          "value": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Value",
            "description": "Elevation reading."
          },
          "unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Unit",
            "description": "Unit of length. Defaults to SI unit 'm'."
          },
          "timestamp": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Timestamp",
            "description": "Timestamp in ISO 8601 format: YYYY-MM-DDThh:mm:ssTZD."
          }
        },
        "type": "object",
        "required": ["value", "unit", "timestamp"],
        "title": "VehicleElevation"
      },
      "VehicleLocation": {
        "properties": {
          "latitude": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Latitude",
            "description": "Latitude ranges between -90 and 90 degrees, inclusive. Coordinate reference system is WGS84."
          },
          "longitude": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Longitude",
            "description": "Longitude ranges between -180 and 180 degrees, inclusive. Coordinate reference system is WGS84."
          },
          "timestamp": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Timestamp",
            "description": "Location timestamp in ISO 8601 format: YYYY-MM-DDThh:mm:ssTZD."
          }
        },
        "type": "object",
        "required": ["latitude", "longitude", "timestamp"],
        "title": "VehicleLocation"
      },
      "VehicleLockStateEnum": {
        "type": "string",
        "enum": ["OPEN", "CLOSED"],
        "title": "VehicleLockStateEnum",
        "description": "Enum for lock status."
      },
      "VehicleMetaData": {
        "properties": {
          "lastSeenAt": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Lastseenat",
            "description": "When the vehicle sent the latest data. This is a timestamp in ISO 8601 format: YYYY-MM-DDThh:mm:ssTZD."
          },
          "consentId": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Consentid",
            "description": "Unique identifier for the consent that was used to retrieve the vehicle data."
          },
          "accountId": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Accountid",
            "description": "Unique identifier for the account that was used to retrieve the vehicle data."
          }
        },
        "type": "object",
        "required": ["lastSeenAt", "consentId", "accountId"],
        "title": "VehicleMetaData"
      },
      "VehicleOdometer": {
        "properties": {
          "value": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Value",
            "description": "Odometer reading."
          },
          "unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Unit",
            "description": "Unit of length. Defaults to SI unit 'km'."
          },
          "timestamp": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Timestamp",
            "description": "Timestamp in ISO 8601 format: YYYY-MM-DDThh:mm:ssTZD."
          }
        },
        "type": "object",
        "required": ["value", "unit", "timestamp"],
        "title": "VehicleOdometer"
      },
      "VehicleOptions": {
        "properties": {
          "vehicleId": { "type": "string", "title": "Vehicleid" },
          "vehicleConfig": { "$ref": "#/components/schemas/VehicleConfig" },
          "options": {
            "items": { "$ref": "#/components/schemas/Option" },
            "type": "array",
            "title": "Options"
          }
        },
        "type": "object",
        "required": ["vehicleId", "vehicleConfig", "options"],
        "title": "VehicleOptions"
      },
      "VehicleRange": {
        "properties": {
          "value": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Value",
            "description": "Range reading."
          },
          "unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Unit",
            "description": "Unit of length. Defaults to SI unit 'km'."
          },
          "timestamp": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Timestamp",
            "description": "Timestamp in ISO 8601 format: YYYY-MM-DDThh:mm:ssTZD."
          }
        },
        "type": "object",
        "required": ["value", "unit", "timestamp"],
        "title": "VehicleRange"
      },
      "VehicleSecurity": {
        "properties": {
          "locked": {
            "anyOf": [{ "type": "boolean" }, { "type": "null" }],
            "title": "Locked",
            "description": "Vehicle lock status."
          },
          "frontRightDoor": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Front right door lock status."
          },
          "frontLeftDoor": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Front left door lock status."
          },
          "rearRightDoor": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Rear right door lock status."
          },
          "rearLeftDoor": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Rear left door lock status."
          },
          "frontRightWindow": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Front right window lock status."
          },
          "frontLeftWindow": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Front left window lock status."
          },
          "rearLeftWindow": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Rear left window lock status."
          },
          "rearRightWindow": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Rear right window lock status."
          },
          "frontTrunk": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Front trunk lock status."
          },
          "rearTrunk": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Rear trunk lock status."
          },
          "sunRoof": {
            "anyOf": [
              { "$ref": "#/components/schemas/VehicleLockStateEnum" },
              { "type": "null" }
            ],
            "description": "Sun roof lock status."
          },
          "timestamp": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Timestamp",
            "description": "Timestamp in ISO 8601 format: YYYY-MM-DDThh:mm:ssTZD."
          }
        },
        "type": "object",
        "required": [
          "locked",
          "frontRightDoor",
          "frontLeftDoor",
          "rearRightDoor",
          "rearLeftDoor",
          "frontRightWindow",
          "frontLeftWindow",
          "rearLeftWindow",
          "rearRightWindow",
          "frontTrunk",
          "rearTrunk",
          "sunRoof",
          "timestamp"
        ],
        "title": "VehicleSecurity"
      },
      "VehicleSpecifications": {
        "properties": {},
        "additionalProperties": true,
        "type": "object",
        "title": "VehicleSpecifications",
        "description": "Vehicle specifications schema"
      },
      "VehicleStateOfCharge": {
        "properties": {
          "value": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Value",
            "description": "State of charge reading."
          },
          "unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Unit",
            "description": "No unit. Percentage indicating the state of charge of the battery pack."
          },
          "timestamp": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Timestamp",
            "description": "Timestamp in ISO 8601 format: YYYY-MM-DDThh:mm:ssTZD."
          }
        },
        "type": "object",
        "required": ["value", "unit", "timestamp"],
        "title": "VehicleStateOfCharge"
      },
      "VehicleTelemetry": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "odometer": { "$ref": "#/components/schemas/VehicleOdometer" },
          "location": { "$ref": "#/components/schemas/VehicleLocation" },
          "elevation": { "$ref": "#/components/schemas/VehicleElevation" },
          "stateOfCharge": {
            "$ref": "#/components/schemas/VehicleStateOfCharge"
          },
          "chargingState": {
            "$ref": "#/components/schemas/VehicleChargingState"
          },
          "range": { "$ref": "#/components/schemas/VehicleRange" },
          "tirePressure": {
            "$ref": "#/components/schemas/VehicleTirePressure"
          },
          "security": { "$ref": "#/components/schemas/VehicleSecurity" },
          "metadata": { "$ref": "#/components/schemas/VehicleMetaData" }
        },
        "type": "object",
        "required": [
          "id",
          "odometer",
          "location",
          "elevation",
          "stateOfCharge",
          "chargingState",
          "range",
          "tirePressure",
          "security",
          "metadata"
        ],
        "title": "VehicleTelemetry"
      },
      "VehicleTirePressure": {
        "properties": {
          "frontRightTire": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Frontrighttire",
            "description": "Front right tire pressure reading."
          },
          "frontLeftTire": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Frontlefttire",
            "description": "Front left tire pressure reading."
          },
          "rearRightTire": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Rearrighttire",
            "description": "Rear right tire pressure reading."
          },
          "rearLeftTire": {
            "anyOf": [{ "type": "number" }, { "type": "null" }],
            "title": "Rearlefttire",
            "description": "Rear left tire pressure reading."
          },
          "unit": {
            "anyOf": [{ "type": "string" }, { "type": "null" }],
            "title": "Unit",
            "description": "Unit of pressure. Defaults to SI unit 'kPa'."
          },
          "timestamp": {
            "anyOf": [
              { "type": "string", "format": "date-time" },
              { "type": "null" }
            ],
            "title": "Timestamp",
            "description": "Timestamp in ISO 8601 format: YYYY-MM-DDThh:mm:ssTZD."
          }
        },
        "type": "object",
        "required": [
          "frontRightTire",
          "frontLeftTire",
          "rearRightTire",
          "rearLeftTire",
          "unit",
          "timestamp"
        ],
        "title": "VehicleTirePressure"
      },
      "VehicleTrimSuggestion": {
        "properties": {
          "id": { "type": "string", "title": "Id" },
          "name": { "type": "string", "title": "Name" }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "VehicleTrimSuggestion",
        "description": "Single vehicle trim suggestion"
      },
      "VehicleUpdateRegistration": {
        "properties": {
          "registrationPlate": {
            "type": "string",
            "maxLength": 50,
            "minLength": 1,
            "title": "Registrationplate"
          }
        },
        "type": "object",
        "required": ["registrationPlate"],
        "title": "VehicleUpdateRegistration"
      }
    },
    "securitySchemes": {
      "OAuth2ClientCredentialsBearer": {
        "type": "oauth2",
        "flows": {
          "clientCredentials": { "scopes": {}, "tokenUrl": "/v1/oauth2/token" }
        }
      }
    }
  },
  "x-readme": {
    "explorer-enabled": true,
    "proxy-enabled": true,
    "samples-enabled": true
  }
}
